---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: jupyter
  labels:
    app: phenomenal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phenomenal
      task: jupyter
  template:
    metadata:
      labels:
        app: phenomenal
        task: jupyter
    spec:
      containers:
      - name: jupyter
        image: jupyter/all-spark-notebook
        args:
          - "start-notebook.sh"
          - "--NotebookApp.password='{{sha1_pass}}'"
        env:
          - name: OS_AUTH_URL
            value: "{{os_auth_url}}"
          - name: OS_AUTH_VERSION
            value: "{{os_auth_version}}"
          - name: OS_TENANT_NAME
            value: "{{os_tenant_name}}"
          - name: OS_TENANT_ID
            value: "{{os_tenant_id}}"
          - name: OS_REGION_NAME
            value: "{{os_region_name}}"
          - name: OS_USER_DOMAIN_ID
            value: "{{os_user_domain_id}}"
          - name: OS_USERNAME
            value: "{{os_username}}"
          - name: OS_PASSWORD
            value: "{{os_password}}"
        ports:
        - containerPort: 8888
        resources:
          requests:
            memory: "3G"
            cpu: "3"
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: luigi
  labels:
    app: phenomenal
    cheese: luigi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phenomenal
      task: luigi
  template:
    metadata:
      labels:
        app: phenomenal
        task: luigi
    spec:
      containers:
      - name: luigi
        image: farmbio/luigid
        ports:
        - containerPort: 8082
        resources:
          requests:
            memory: "3G"
            cpu: "3"
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
spec:
  ports:
  - name: http
    targetPort: 8888
    port: 8888
  selector:
    app: phenomenal
    task: jupyter
---
apiVersion: v1
kind: Service
metadata:
  name: luigi
spec:
  ports:
  - name: http
    targetPort: 8082
    port: 8082
  selector:
    app: phenomenal
    task: luigi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: phenomenal
spec:
  rules:
  - host: notebook.{{domain_name}}
    http:
      paths:
      - path: /
        backend:
          serviceName: jupyter
          servicePort: http
  - host: luigi.{{domain_name}}
    http:
      paths:
      - path: /
        backend:
          serviceName: luigi
          servicePort: http
